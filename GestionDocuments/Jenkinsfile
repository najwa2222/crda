pipeline {
    agent any

    environment {
        KUBERNETES_NAMESPACE = 'gestiondocuments'
        KUBERNETES_DEPLOYMENT = 'backend'
        DOCKER_IMAGE = 'najwakarrouchi/gestiondocuments'
        DOCKER_TAG = 'latest'
        KUBECONFIG = 'C:\\Users\\acer\\.kube\\config'
        DOCKERFILE_PATH = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\app\\backend\\GestionDocuments\\Dockerfile'
        YAML_FOLDER_PATH = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\projet\\kubernetes\\"
        DEPLOYMENT_YAML = "${YAML_FOLDER_PATH}deployment.yaml"
    }

    stages {
        stage('Set Up Environment') {
            steps {
                script {
                    echo "Configuration de l'environnement..."
                    bat "echo Configuration du chemin Docker : ${DOCKERFILE_PATH}"
                    bat "echo Configuration de KUBECONFIG : ${KUBECONFIG}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Construction de l'image Docker..."
                    bat "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f ${DOCKERFILE_PATH.replace('\\', '/')} ."
                }
            }
        }

        stage('Verify Docker Image') {
            steps {
                script {
                    echo "Vérification et récupération de l'image Docker..."
                    bat """
                    docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker images ${DOCKER_IMAGE}:${DOCKER_TAG}
                    """
                }
            }
        }

        stage('Deploy with kubectl') {
            steps {
                script {
                    // Vérifiez l'existence du fichier YAML avant d'appliquer
                    if (fileExists(DEPLOYMENT_YAML)) {
                        echo "Fichier de déploiement trouvé : ${DEPLOYMENT_YAML}"
                        // Vérifiez l'existence de l'espace de nom, le créer sinon
                        bat "kubectl get namespace ${KUBERNETES_NAMESPACE} || kubectl create namespace ${KUBERNETES_NAMESPACE}"
                    
                        // Appliquer le fichier YAML de déploiement
                        bat "kubectl apply -f ${DEPLOYMENT_YAML} -n ${KUBERNETES_NAMESPACE}"
                    } else {
                        error "Le fichier de déploiement ${DEPLOYMENT_YAML} n'existe pas."
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline terminée"
        }
    }
}
