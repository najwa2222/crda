pipeline {
    agent any

    environment {
        PATH = "C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Program Files\\nodejs;${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/najwa2222/crda.git'
            }
        }
        stage('Build authentification') {
            steps {
                script {
                    def dockerBuildStatus = bat(
                        script: 'docker build -t authentification:latest -f authentification/Dockerfile .',
                        returnStatus: true
                    )
                    if (dockerBuildStatus != 0) {
                        error "Docker build failed with status: ${dockerBuildStatus}"
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def npmInstallStatus = bat(
                        script: 'npm install',
                        returnStatus: true
                    )
                    if (npmInstallStatus != 0) {
                        error "npm install failed with status: ${npmInstallStatus}"
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // Vérifiez l'existence du fichier prometheus.yml avant de continuer
                    if (!fileExists("C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\authentification@2\\prometheus\\prometheus.yml")) {
                        error "Le fichier prometheus.yml n'existe pas à l'emplacement spécifié"
                    }
                    def dockerComposeUpStatus = bat(
                        script: 'docker-compose up -d --timeout 120',
                        returnStatus: true
                    )
                    if (dockerComposeUpStatus != 0) {
                        error "docker-compose up failed with status: ${dockerComposeUpStatus}"
                    }
                }
            }
        }
    }
    post {
        failure {
            script {
                echo 'Pipeline failed!'
            }
        }
        success {
            script {
                echo 'Pipeline succeeded!'
            }
        }
    }
}
