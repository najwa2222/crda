pipeline {
    agent {
        docker {
            image 'node:20'
        }
    }

    environment {
        NODE_ENV = 'production'
        DOCKER_IMAGE = 'najwakarrouchi968/authentification:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/najwa2222/crda.git', branch: 'master'
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Build') {
            steps {
                bat 'npm install'
            }
        }

        stage('Test') {
            steps {
                bat 'npm test'
            }
        }

        stage('Deploy') {
            when {
                anyOf {
                    branch 'master'
                }
            }
            steps {
                script {
                    def imageName = env.DOCKER_IMAGE

                    // Construire l'image Docker
                    bat "docker build -t ${imageName} ."

                    // Se connecter à Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_HUB_USER', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        bat "echo %DOCKER_HUB_PASSWORD% | docker login -u %DOCKER_HUB_USER% --password-stdin"
                    }

                    // Pousser l'image Docker
                    bat "docker push ${imageName}"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline terminé avec succès.'
        }
        failure {
            echo 'Pipeline échoué.'
        }
    }
}
