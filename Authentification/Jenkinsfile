pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/najwa2222/crda.git'
            }
        }
        
        stage('Build') {
            steps {
                sh 'npm run build' // Installer les dépendances et construire l'application
            }
        }
        
        stage('Unit Tests') {
            steps {
                sh 'npm test' // Exécuter les tests unitaires
            }
        }
        
        stage('Integration Tests') {
            steps {
                // Exécuter les tests d'intégration
                sh 'npm run test:integration' // Assurez-vous que ce script est défini dans package.json
            }
        }
        
        stage('Security Tests') {
            steps {
                // Exécuter les tests de sécurité
                sh 'npm run test:security' // Assurez-vous que ce script est défini dans package.json
            }
        }
        
      
        
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t najwakarrouchi968/authentification:latest .' // Construire l'image Docker
            }
        }
        
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh "echo $PASSWORD | docker login -u $USERNAME --password-stdin"
                    sh "docker push najwakarrouchi968/authentification:latest" // Pousser l'image Docker vers Docker Hub
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    kubernetesDeploy(
                        configs: 'k8s/authentification-deployment.yaml',
                        kubeconfigId: 'kubeconfig'
                    )
                }
            }
        }
    }
}
